services:
  db:
    image: postgres:15
    container_name: ai-platform-db
    environment:
      POSTGRES_DB: ai_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: unless-stopped

  portal-be:
    build:
      context: ./portal-be
      dockerfile: Dockerfile
    container_name: portal-be
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://postgres:password@db:5432/ai_platform
      - CORS_ORIGINS=http://localhost:3000,http://portal-fe
    depends_on:
      - db
    networks:
      - app-network
    restart: unless-stopped

  portal-fe:
    build:
      context: ./portal-fe
      dockerfile: Dockerfile
    container_name: portal-fe
    ports:
      - "3000:80"
    depends_on:
      - portal-be
    networks:
      - app-network
    restart: unless-stopped

  agent-api-server:
    build:
      context: ./agent-api-server
      dockerfile: Dockerfile
    container_name: agent-api-server
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@db:5432/ai_platform
      - GEMINI_API_KEY=${GEMINI_API_KEY:-your_gemini_api_key_here}
      - CORS_ORIGINS=http://localhost:3001,http://sample-agent-client
    depends_on:
      - db
    networks:
      - app-network
    restart: unless-stopped

  sample-agent-client:
    build:
      context: ./sample-agent-client
      dockerfile: Dockerfile
    container_name: sample-agent-client
    ports:
      - "3001:80"
    environment:
      - VITE_API_BASE_URL=http://localhost:8001
      - VITE_AGENT_ID=default_agent
    depends_on:
      - agent-api-server
    networks:
      - app-network
    restart: unless-stopped
    
volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
